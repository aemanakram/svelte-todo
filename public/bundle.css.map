{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import MineIcon from \"./mine_icon.svelte\";\r\n\r\n  const fieldSize = 10;\r\n  const mineCount = 10;\r\n\r\n  let gameover = false;\r\n  let win = false;\r\n  let minefield = [];\r\n\r\n  const setupField = (size, mineCount) => {\r\n    gameover = false;\r\n    win = false;\r\n\r\n    let field = [];\r\n    for (let i = 0; i < size; i++) {\r\n      field[i] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        field[i][j] = {\r\n          x: i,\r\n          y: j,\r\n          isMine: false,\r\n          isRevealed: false,\r\n          mineNeighbors: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    field = addMines(field, mineCount);\r\n    field = countMineNeighbors(field);\r\n    return field;\r\n  };\r\n\r\n  const addMines = (field) => {\r\n    let mines = 0;\r\n    while (mines < (fieldSize * fieldSize) / 10) {\r\n      const x = Math.floor(Math.random() * fieldSize);\r\n      const y = Math.floor(Math.random() * fieldSize);\r\n      if (!field[x][y].isMine) {\r\n        field[x][y].isMine = true;\r\n        mines++;\r\n      }\r\n    }\r\n    return field;\r\n  };\r\n\r\n  const countMineNeighbors = (field) => {\r\n    for (let i = 0; i < fieldSize; i++) {\r\n      for (let j = 0; j < fieldSize; j++) {\r\n        if (field[i][j].isMine) {\r\n          for (let k = -1; k <= 1; k++) {\r\n            for (let l = -1; l <= 1; l++) {\r\n              if (\r\n                i + k >= 0 &&\r\n                i + k < fieldSize &&\r\n                j + l >= 0 &&\r\n                j + l < fieldSize\r\n              ) {\r\n                field[i + k][j + l].mineNeighbors++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return field;\r\n  };\r\n\r\n  const checkWin = () => {\r\n    let count = 0;\r\n    for (let i = 0; i < fieldSize; i++) {\r\n      for (let j = 0; j < fieldSize; j++) {\r\n        if (minefield[i][j].isRevealed) {\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n    if (count == fieldSize * fieldSize - mineCount) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const revealMine = (mine) => {\r\n    if (gameover) return;\r\n    if (mine.isRevealed) return;\r\n\r\n    revealNeighbors(mine);\r\n\r\n    if (mine.isMine) {\r\n      gameover = true;\r\n      minefield = [...minefield];\r\n      return;\r\n    }\r\n\r\n    if (checkWin()) {\r\n      win = true;\r\n      gameover = true;\r\n    }\r\n    minefield = [...minefield];\r\n  };\r\n\r\n  const revealNeighbors = (mine) => {\r\n    if (mine.isRevealed) return;\r\n    mine.isRevealed = true;\r\n\r\n    if (mine.mineNeighbors == 0) {\r\n      for (let i = -1; i <= 1; i++) {\r\n        for (let j = -1; j <= 1; j++) {\r\n          if (\r\n            mine.x + i >= 0 &&\r\n            mine.x + i < fieldSize &&\r\n            mine.y + j >= 0 &&\r\n            mine.y + j < fieldSize\r\n          ) {\r\n            revealNeighbors(minefield[mine.x + i][mine.y + j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onMount(() => {\r\n    minefield = setupField(fieldSize, mineCount);\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <div class=\"container\">\r\n    <div class=\"status-bar\">\r\n      <button\r\n        class=\"reset-button\"\r\n        on:click={() => {\r\n          minefield = setupField(fieldSize, mineCount);\r\n        }}>RESET</button\r\n      >\r\n      <div class=\"status\">\r\n        {#if gameover}\r\n          {#if win}\r\n            You win!\r\n          {:else}\r\n            You lose!\r\n          {/if}\r\n        {:else}\r\n          Minesweeper\r\n        {/if}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Display minefield as grid of buttons -->\r\n    {#each minefield as minerow}\r\n      <div class=\"row\">\r\n        {#each minerow as mine}\r\n          <button\r\n            class=\"field {mine.isRevealed ? 'open' : ''} {mine.isMine\r\n              ? 'mine'\r\n              : ''}\"\r\n            on:click={() => revealMine(mine)}\r\n          >\r\n            {#if mine.isRevealed && mine.isMine}\r\n              <MineIcon />\r\n            {:else}\r\n              {mine.mineNeighbors ? mine.mineNeighbors : \"\"}\r\n            {/if}\r\n          </button>\r\n        {/each}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .status-bar {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .status {\r\n    font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: white;\r\n  }\r\n\r\n  .row {\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n    height: fit-content;\r\n  }\r\n\r\n  .field {\r\n    background-color: lightgray;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    margin: 0px;\r\n    border-color: white;\r\n    font-size: 0;\r\n  }\r\n\r\n  .field.open {\r\n    pointer-events: none;\r\n    border-color: white;\r\n    background-color: #fff;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .field.mine.open {\r\n    pointer-events: none;\r\n    border-color: white;\r\n    background-color: red;\r\n    font-size: 0;\r\n  }\r\n\r\n  .reset-button {\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    padding: 0.5rem;\r\n    margin: 0.5rem;\r\n  }\r\n\r\n  .reset-button:hover {\r\n    background-color: #eee;\r\n  }\r\n\r\n  .reset-button:active {\r\n    background-color: #ddd;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA6KE,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,WAAW,CAAE,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAC5D,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CACtC,MAAM,CAAE,WAAW,AACrB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,SAAS,CAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,YAAY,CAAE,KAAK,CACnB,SAAS,CAAE,CAAC,AACd,CAAC,AAED,MAAM,KAAK,cAAC,CAAC,AACX,cAAc,CAAE,IAAI,CACpB,YAAY,CAAE,KAAK,CACnB,gBAAgB,CAAE,IAAI,CACtB,SAAS,CAAE,MAAM,AACnB,CAAC,AAED,MAAM,KAAK,KAAK,cAAC,CAAC,AAChB,cAAc,CAAE,IAAI,CACpB,YAAY,CAAE,KAAK,CACnB,gBAAgB,CAAE,GAAG,CACrB,SAAS,CAAE,CAAC,AACd,CAAC,AAED,aAAa,cAAC,CAAC,AACb,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,MAAM,AAChB,CAAC,AAED,2BAAa,MAAM,AAAC,CAAC,AACnB,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,2BAAa,OAAO,AAAC,CAAC,AACpB,gBAAgB,CAAE,IAAI,AACxB,CAAC"
}